"use strict";(self.webpackChunkd3_chart_drawing_demo_on_aws_lambda=self.webpackChunkd3_chart_drawing_demo_on_aws_lambda||[]).push([[136],{"./src/HtmlDrawer.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChartElement:()=>ChartElement,__namedExportsOrder:()=>__namedExportsOrder,default:()=>HtmlDrawer_stories});class InputDatas{constructor(inputDatas){this.inputDatas=inputDatas}}class InputData{constructor(label,color,proportion){this.label=label,this.color=color,this.proportion=proportion}}class ArgParser{parse(raws){return new InputDatas(raws.map((raw=>new InputData(raw.label,raw.color,raw.proportion))))}}var src=__webpack_require__("./node_modules/d3/src/index.js");class ChartingConfiguration{static margin=70;static width=600;static height=600;static radius=250;static innerRadius=150}function drawLegend(svgElement,row,i){const ChartLegendGroup=svgElement.append("g").attr("transform","translate(20,"+(20+20*i)+")");ChartLegendGroup.append("rect").attr("x",0).attr("y",0).attr("width",10).attr("height",10).style("fill",row.color),ChartLegendGroup.append("text").attr("fill","currentColor").attr("text-anchor","start").attr("x",20).attr("y",0).attr("dy",9).text(row.label)}const defaultJsonString='[\n    { "label": "20代", "proportion": "0.15", "color": "#d53e4f" },\n    { "label": "30代", "proportion": "0.23", "color": "#fc8d59" },\n    { "label": "40代", "proportion": "0.21", "color": "#fee08b" },\n    { "label": "50代", "proportion": "0.18", "color": "#ffffbf" },\n    { "label": "60代", "proportion": "0.15", "color": "#e6f598" },\n    { "label": "70代以上", "proportion": "0.08", "color": "#99d594" }\n  ]',HtmlDrawer_stories={title:"DonutsChartHtml",render:args=>function createGraph({text}){const rawAssetAllocation=JSON.parse(text),inputdatas=(new ArgParser).parse(rawAssetAllocation),elements=document.getElementsByClassName("donuts-chart");for(let i=0;i<elements.length;i++)elements[i].remove();const chartElement=function draw(document,inputs){const svgDonuts=src.Ys(document.body).append("svg").attr("class","donuts-chart").attr("width",600).attr("height",600).attr("xmlns","http://www.w3.org/2000/svg"),g=svgDonuts.append("g").attr("class","DonutsChart").attr("transform","translate("+ChartingConfiguration.width/2+","+ChartingConfiguration.height/2+")"),pie=src.ve8().value((d=>d.proportion)),path=src.Nb1().outerRadius(ChartingConfiguration.radius).innerRadius(ChartingConfiguration.innerRadius);g.selectAll(".arc").data(pie(inputs.inputDatas)).enter().append("g").attr("class","arc").append("path").attr("d",path).attr("fill",(function(d){return d.data.color}));const svgDonutsLegend=svgDonuts.append("g").attr("class","ChartLegend").attr("font-family","Noto Sans JP").attr("font-size",10);let index=0;for(const row of inputs.inputDatas)drawLegend(svgDonutsLegend,row,index),index++;return document}(document,inputdatas).getElementsByClassName("donuts-chart")[0];return document.body.appendChild(chartElement)}(args),argTypes:{text:{description:"json",control:"text",defaultValue:defaultJsonString}}};const ChartElement={args:{text:defaultJsonString}};ChartElement.parameters={...ChartElement.parameters,docs:{...ChartElement.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: defaultJsonString\n  }\n}",...ChartElement.parameters?.docs?.source}}};const __namedExportsOrder=["ChartElement"]}}]);